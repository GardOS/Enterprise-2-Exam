version: '3.3'

services:
  #Data storage
  redis:
    image: "redis:latest"
  postgres-book:
    image: "postgres:10"
  postgres-sale:
    image: "postgres:10"
  postgres-news:
    image: "postgres:10"
  postgres-seller:
    image: "postgres:10"

  #Message queue
  rabbitmq:
    image: "rabbitmq:3"

  #Custom service
  gateway:
    build:
      context: gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - eureka
      - redis
      - rabbitmq
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  eureka:
    build:
      context: eureka
      dockerfile: Dockerfile
    ports:
      - "8761:8761" #TODO: remove
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  book-server_0:
    build:
      context: book
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - gateway
      - postgres-book
      - redis
  book-server_1:
    build:
      context: book
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - gateway
      - postgres-book
      - redis
  sale-server:
    build:
      context: sale
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - gateway
      - postgres-sale
      - redis
      - rabbitmq
  seller-server:
    build:
      context: seller
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - gateway
      - postgres-seller
      - redis
      - rabbitmq
  news-server:
    build:
      context: news
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - gateway
      - postgres-news
      - redis
      - rabbitmq